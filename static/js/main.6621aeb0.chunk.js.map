{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogsItem/DialogsItem.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Redux/State.ts","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Components/Dialogs/DialogsItem/DialogsItem.tsx","Components/Dialogs/MessageItem/MessageItem.tsx","Components/Dialogs/Dialogs.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","App.tsx","index.tsx","reportWebVitals.ts"],"names":["module","exports","state","profileComponent","posts","id","message","likesCount","newPostText","dialogComponent","dialogs","name","messages","newMessageText","rerenderEntireTree","console","log","changePostEL","el","addPost","newPost","push","changeMessageEl","addMessage","newMessageEl","Header","className","classes","header","src","alt","Navbar","navbar","item","to","activeClassName","active","DialogsItem","props","path","dialogsItem","MessageItem","messageItem","Dialogs","dialogsState","map","d","messagesItem","m","React","createRef","dialogsPage","onClick","current","value","ref","onChange","Post","MyPosts","postsItem","p","newPostEl","ProfileInfo","Profile","content","News","Music","Settings","App","render","ReactDOM","StrictMode","document","getElementById","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals"],"mappings":"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","file":"static/js/main.6621aeb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__KWdrO\",\"item\":\"Navbar_item__2aBSm\",\"active\":\"Navbar_active__1z59o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__17Ivv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItem\":\"DialogsItem_dialogsItem__Ye6PL\",\"active\":\"DialogsItem_active__cFrRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__dxjI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3deWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2aZvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3XhbP\"};","export type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ProfileComponentType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type DialogComponentType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    newMessageText: string\r\n}\r\n\r\nexport type RootStateType = {\r\n    profileComponent: ProfileComponentType\r\n    dialogComponent: DialogComponentType\r\n}\r\n\r\n\r\nexport const state = {\r\n    profileComponent: {\r\n        posts: [\r\n            {id: 1, message: 'Hello, my name is Ilya', likesCount: 34},\r\n            {id: 2, message: 'Hey, it is my second post', likesCount: 12},\r\n            {id: 3, message: 'Sorry for my english', likesCount: 105},\r\n            {id: 4, message: 'I love your likes', likesCount: 65},\r\n        ],\r\n        newPostText: ''\r\n    },\r\n    dialogComponent: {\r\n        dialogs: [\r\n            {id: 1, name: 'Nastya'},\r\n            {id: 2, name: 'Gleb'},\r\n            {id: 3, name: 'Anton'},\r\n            {id: 4, name: 'Denis'},\r\n            {id: 5, name: 'Kostya'},\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hello, my name is Ilya'},\r\n            {id: 2, message: 'I am fine'},\r\n            {id: 3, message: 'Yo'},\r\n        ],\r\n        newMessageText: ''\r\n    }\r\n}\r\n\r\nlet rerenderEntireTree = () => {\r\n    console.log('hello')\r\n}\r\n\r\nexport const observe = (observer: () => void) => {\r\n    rerenderEntireTree = observer\r\n}\r\n\r\nexport function changePostEL(el: string) {\r\n    state.profileComponent.newPostText = el\r\n    console.log(el)\r\n    rerenderEntireTree()\r\n}\r\n\r\nexport function addPost() {\r\n    let newPost = {\r\n        id: 5,\r\n        message: state.profileComponent.newPostText,\r\n        likesCount: 17\r\n    }\r\n    state.profileComponent.posts.push(newPost)\r\n    state.profileComponent.newPostText = ''\r\n    rerenderEntireTree()\r\n}\r\n\r\n\r\nexport function changeMessageEl(el: string) {\r\n    state.dialogComponent.newMessageText = el\r\n    console.log(el)\r\n    rerenderEntireTree()\r\n}\r\n\r\nexport function addMessage() {\r\n    let newMessageEl = {\r\n        id: 5,\r\n        message: state.dialogComponent.newMessageText,\r\n    }\r\n    state.dialogComponent.messages.push(newMessageEl)\r\n    state.dialogComponent.newMessageText = ''\r\n    rerenderEntireTree()\r\n}","import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://untappd.akamaized.net/site/brewery_logos/brewery-438986_7160b.jpeg' alt=''/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={classes.navbar}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './DialogsItem.module.css';\r\nimport {DialogsType} from '../../../Redux/State';\r\n\r\n\r\nfunction DialogsItem(props: DialogsType) {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={classes.dialogsItem}>\r\n            <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport classes from './MessageItem.module.css';\r\n\r\ntype MessageItemPropsType = {\r\n    message: string\r\n}\r\n\r\nfunction MessageItem(props: MessageItemPropsType) {\r\n    return (\r\n        <div className={classes.messageItem}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport {DialogComponentType} from '../../Redux/State';\r\n\r\ntype DialogsType = {\r\n    dialogsState: DialogComponentType\r\n    changeMessageEl: (el: string) => void,\r\n    addMessage: () => void\r\n}\r\n\r\nfunction Dialogs(props: DialogsType) {\r\n\r\n    let dialogs = props.dialogsState.dialogs\r\n    let messages = props.dialogsState.messages\r\n\r\n\r\n    let dialogsItem = dialogs.map(d => <DialogsItem key={d.id} id={d.id} name={d.name}/>)\r\n    let messagesItem = messages.map(m => <MessageItem key={m.id} message={m.message}/>)\r\n\r\n    let newMessageEl = React.createRef<HTMLTextAreaElement>()\r\n    const addMessage = () => {\r\n        if (newMessageEl.current) {\r\n            props.addMessage()\r\n        }\r\n    }\r\n    const addMessageEl = () => {\r\n        if (newMessageEl.current) {\r\n            props.changeMessageEl(newMessageEl.current?.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogsPage}>\r\n            <div className={classes.dialogs}>\r\n                {dialogsItem}\r\n\r\n            </div>\r\n            <div className={classes.message}>\r\n                <button onClick={addMessage}>Add message</button>\r\n                <div>\r\n                    <textarea value={props.dialogsState.newMessageText} ref={newMessageEl} onChange={addMessageEl}></textarea>\r\n                </div>\r\n                {messagesItem}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostPropsType) {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://avatarko.ru/img/kartinka/2/Gubka_Bob.jpg' alt=''/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} likes</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {PostsType} from '../../../Redux/State';\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: () => void\r\n    changePostEL: (el: string) => void\r\n    newPostText: string\r\n}\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n\r\n    let postsItem = props.posts.map( p => <Post key={p.id}\r\n                                                message={p.message}\r\n                                                likesCount={p.likesCount}/> )\r\n\r\n    const newPostEl = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const addPost = () => {\r\n        if (newPostEl.current) {\r\n            props.addPost()\r\n        }\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        if (newPostEl.current) {\r\n            props.changePostEL(newPostEl.current?.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My posts\r\n            <div>\r\n                <textarea value={props.newPostText} ref={newPostEl} onChange={onPostChange}></textarea>\r\n                <div>\r\n                    <button onClick={ addPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                { postsItem }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nfunction ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://st2.depositphotos.com/3106839/7689/i/600/depositphotos_76899721-stock-photo-barley-beans-in-wooden-plate.jpg'\r\n                    alt=''/>\r\n            </div>\r\n            <div>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {PostsType} from '../../Redux/State';\r\n\r\ntype ProfileType = {\r\n    posts: Array<PostsType>\r\n    addPost: () => void\r\n    changePostEL: (el: string) => void\r\n    newPostText: string\r\n}\r\n\r\nfunction Profile(props: ProfileType) {\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.posts}\r\n                     addPost={props.addPost}\r\n                     newPostText={props.newPostText}\r\n                     changePostEL={props.changePostEL}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Dialogs from './Components/Dialogs/Dialogs';\r\nimport Profile from './Components/Profile/Profile';\r\nimport {Route} from 'react-router-dom';\r\nimport News from './Components/News/News';\r\nimport Music from './Components/Music/Music';\r\nimport Settings from './Components/Settings/Settings';\r\nimport {RootStateType} from './Redux/State';\r\n\r\ntype AppType = {\r\n    state: RootStateType\r\n    changePostEL: (el: string) => void,\r\n    addPost: () => void,\r\n    changeMessageEl: (el: string) => void,\r\n    addMessage: () => void\r\n}\r\n\r\nconst App = (props: AppType) => {\r\n\r\n    let posts = props.state.profileComponent.posts;\r\n    let dialogsState = props.state.dialogComponent;\r\n\r\n    return (\r\n        <div className='appWrapper'>\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className='appWrapperContent'>\r\n                <Route path={'/profile'}\r\n                       render={() => <Profile posts={posts}\r\n                                              newPostText={props.state.profileComponent.newPostText}\r\n                                              addPost={props.addPost}\r\n                                              changePostEL={props.changePostEL}/>}/>\r\n\r\n                <Route path={'/dialogs'}\r\n                       render={() => <Dialogs dialogsState={dialogsState}\r\n                                              addMessage={props.addMessage}\r\n                                              changeMessageEl={props.changeMessageEl}/>}/>\r\n\r\n                <Route path={'/news'} render={() => <News/>}/>\r\n                <Route path={'/music'} render={() => <Music/>}/>\r\n                <Route path={'/settings'} render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {addMessage, addPost, changeMessageEl, changePostEL, observe, state} from './Redux/State';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nexport function rerenderEntireTree() {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <React.StrictMode>\r\n                <App state={state}\r\n                     addPost={addPost}\r\n                     changePostEL={changePostEL}\r\n                     addMessage={addMessage}\r\n                     changeMessageEl={changeMessageEl}/>\r\n            </React.StrictMode>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nrerenderEntireTree()\r\nobserve(rerenderEntireTree)\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}